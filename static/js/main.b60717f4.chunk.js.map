{"version":3,"sources":["socket-io-server.js","chat-app/avioncito.png","Flights.js","Chats-socket.js","App.jsx","index.js"],"names":["socket","require","io","path","Flights","useState","flight","setFlight","position","setPosition","limeOptions","color","imgAvion","Icon","iconUrl","avioncito","iconSize","useEffect","emit","on","message","prev","id","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","map","vuelos","multiPolyline","origin","destination","Polyline","pathOptions","positions","origen","Marker","posicion","avionViajando","icon","Popup","code","className","style","textAlign","airline","plane","seats","passengers","pasajeros","name","age","Chats","clientName","setClientName","livechat","setChat","livechats","setChats","nickname","setNickname","onSubmit","event","preventDefault","align","type","value","onChange","e","target","mensajes","moment","Date","date","format","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b60717f4.chunk.js","sourcesContent":["const io = require(\"socket.io-client\");\n\nconst socket = io(\"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl\", {\n    path: '/flights'\n});\n\nexport default socket;","export default __webpack_public_path__ + \"static/media/avioncito.377a0bb5.png\";","import { Icon } from 'leaflet';\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet'\nimport socket from './socket-io-server'\nimport avioncito from './chat-app/avioncito.png'\n\nconst Flights = () => {\n\n  const [flight, setFlight] = useState([]);\n  const [position, setPosition] = useState([]);\n\n  const limeOptions = { color: 'lime' }\n\n  const imgAvion = new Icon({\n    iconUrl: avioncito,\n    iconSize: [38,38]\n  });\n  \n  useEffect(() => {\n    socket.emit('FLIGHTS'); \n    socket.on('FLIGHTS', message => {\n      setFlight(message);\n    });\n  }, []);\n  \n   useEffect(() => {\n    socket.on('POSITION', message => {\n      setPosition((prev) => ([...prev, message]));\n    })\n  }, []);\n  return (\n    <div>\n      <h2>Live Map</h2>\n      <p>Click on a plane to see its code</p>\n      <div id=\"leaflet-container\">\n        <MapContainer center={[-36, -65]} zoom={5} scrollWheelZoom={false}>\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          {flight.map(function(vuelos) {\n/*             const destino = [\n              vuelos.destination\n            ] */\n\n            const multiPolyline = [\n              [\n                vuelos.origin[0], vuelos.origin[1]\n\n              ],\n              [\n                vuelos.destination[0], vuelos.destination[1]\n              ],\n            ]\n            return (\n              <Polyline pathOptions={limeOptions} positions={multiPolyline} />\n            )\n          })}\n\n          {flight.map(function(vuelos) {\n            const origen = [\n              vuelos.origin[0], vuelos.origin[1]\n            ]\n            return (\n              <Marker position={origen}>\n              </Marker>  \n            )\n          })}\n\n          {position.map(function(posicion) {\n            const avionViajando = [\n              posicion.position[0], posicion.position[1]\n            ]\n            return (\n              <Marker position={avionViajando} icon={imgAvion}>\n                <Popup code={posicion.code}>\n                  <code>{posicion.code}</code>\n                </Popup>\n              </Marker>  \n            )\n          })}\n        </MapContainer>\n      </div>\n\n      <h2>Flight Information</h2>\n      <div className=\"order-container-title\" style={{textAlign: \"left\"}}>\n          {flight.map(function(vuelos) {\n            return (\n              <div className=\"order-container\">\n                <h3>Code: {vuelos.code}</h3>\n                <p>Airline: {vuelos.airline}</p>\n                <p>Origin: {vuelos.origin[0]}, {vuelos.origin[1]}</p>\n                <p>Destination: {vuelos.destination[0]}, {vuelos.destination[1]}</p>\n                <p>Plane: {vuelos.plane}</p>\n                <p>Seats: {vuelos.seats}</p>\n                <p>Passengers: </p>             \n                <div className=\"order-container-passengers\">\n                  {vuelos.passengers.map(function(pasajeros) {\n                    return (\n                      <p>{pasajeros.name}, {pasajeros.age} years old</p>\n                    )\n                  })}\n                </div>\n              </div>\n            )\n          })}\n      </div>\n    </div>\n  )\n};\n\nexport default Flights;","import React, { useState, useEffect } from 'react';\nimport socket from './socket-io-server';\nimport moment from 'moment';\nimport './Chats-socket.css';\n\nconst Chats = () => {\n\n  const [clientName, setClientName] = useState(\"\");\n  const [livechat, setChat] = useState(\"\");\n  const [livechats, setChats] = useState([]);\n  const [nickname, setNickname] = useState(false);\n  \n  useEffect(() => {\n      socket.on('CHAT', livechat => {\n          setChats((prev)=>[...prev, livechat]); \n      })\n  }, []);\n\n  const chatMessages = (event) => {\n    event.preventDefault();\n    socket.emit(\"CHAT\", {name: clientName, message: livechat});\n  };\n\n  const logInChat = (event) => {\n    event.preventDefault();\n    if (clientName !== \"\") {\n      setNickname(true);\n    } \n  };\n\n  return (\n    <div className=\"container\">\n      {\n        !nickname &&\n        <form onSubmit={logInChat}>\n          <p>Type a nickname:</p>\n          <input align=\"center\" type=\"text\" value={clientName} onChange={e => setClientName(e.target.value)}></input>\n          <input type=\"submit\" value=\"send\"></input>\n        </form>\n      }\n      {\n        nickname &&\n        <form onSubmit={chatMessages}>\n          <p>Type a message:</p>\n          <input align=\"center\" type=\"text\" value={livechat} onChange={e => setChat(e.target.value)}></input>\n          <input type=\"submit\" value=\"send\"></input>\n        </form>\n      }\n      <div className=\"container\" style={{textAlign: \"left\"}}>\n        {livechats.map(function(mensajes) {\n          if (mensajes) { return (\n            <div className=\"order-message\">\n              <p>{mensajes.name}, {moment(new Date(mensajes.date)).format('LLL')}: {mensajes.message}</p>  \n            </div>\n          )}\n        })}\n      </div>\n\n    </div>\n  )\n};\n\nexport default Chats;","import React from \"react\";\nimport './App.css';\nimport Flights from \"./Flights\";\nimport Chats from \"./Chats-socket\";\n\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Flight Control Center</h1>\n      <Flights />\n      <h2>Chat</h2>\n      <Chats />\n\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}